{"version":3,"file":"2-snackbar-DVzbiSB4.js","sources":["../../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst form = document.querySelector('.form');\nconst inputDelay = document.querySelector('input[name=\"delay\"]');\nform.addEventListener('submit', makePromise);\nlet delay = null;\ninputDelay.addEventListener('input', makeDelay);\nconsole.log(delay);\nfunction makeDelay(){\n    delay = inputDelay.value;\n   return delay;\n}\n\nfunction makePromise(event){\n    event.preventDefault();\n    // inputDelay.value = \"\";\n \n    const radioBtn = document.querySelector('[name=\"state\"]:checked').value;\n\n    const promise = new Promise ((resolve, reject) =>{\n               if (radioBtn === \"fulfilled\"){\n                resolve(\n                     iziToast.show({\n                        messageColor: 'white',\n                        backgroundColor: 'green',\n                        position: 'topRight',\n                        close: false,\n                            title: '',\n                            message: `✅ Fulfilled promise in ${delay}ms`\n                               })\n               );\n            }else if (radioBtn === \"rejected\"){\n                reject(\n                   \n                iziToast.show({\n                    messageColor: 'white',\n                    backgroundColor: 'red',\n                    position: 'topRight',\n                    close: false,\n                    title: '',\n                    message: `❌ Rejected promise in ${delay}ms`\n                       })); \n            }\n    })\n    \n    promise\n    .then(value => {\n        setTimeout(() =>{\n           value\n        }, delay)\n        \n    })\n    .catch(value => {\n        setTimeout(() =>{\n            value\n         }, delay)\n    })\n    .finally(() => {\n        inputDelay.value = \"\" ;\n        document.querySelector('[name=\"state\"]').checked = false;\n    });\n}\n\n\n\n\n\n\n\n\n\n// import iziToast from \"izitoast\";\n// import \"izitoast/dist/css/iziToast.min.css\";\n\n// const form = document.querySelector('.form');\n// let delay = document.querySelector('input[name=\"delay\"]').value;\n\n// form.addEventListener('submit', makePromise);\n\n// function makePromise(event){\n//     event.preventDefault();\n    \n//     const radioBtn = document.querySelector('input[name=\"state\"]').value;\n\n//     const promise = new Promise ((resolve, reject) =>{\n           \n//         if (radioBtn === \"fulfilled\"){\n//                 resolve(\n//                     setTimeout(() =>{\n//                         iziToast.show({\n//                             title: '',\n//                             message: `✅ Fulfilled promise in ${result}ms`\n//                                })\n//                     }, delay)\n//                );\n//             }else if(radioBtn === \"rejected\"){\n//                 reject(\n//                     setTimeout(() =>{\n//                 iziToast.show({\n//                     title: '',\n//                     message: `❌ Rejected promise in ${delay}ms`\n//                        })}, delay)); \n//             }\n//     })\n    \n//     promise\n//     .then(value) => {\n//         value\n//     }\n//     .catch(value) => {\n//         value\n//     }\n//     .finally\n// }\n\n\n\n\n\n\n\n\n\n\n\n// let inputDelay = document.querySelector('input[name=\"delay\"]').value;\n// const state = document.querySelector('input[type=\"radio\"]');\n// const form = document.querySelector('.form');\n\n// form.addEventListener('submit', makeNotification);\n\n// function makeNotification(event) {\n//     event.preventDefault();\n//     const promise = new Promise((resolve, reject) => {\n//         setTimeout(() => {\n//             if (state.checked) {\n//                 resolve(inputDelay);\n//             } else {\n//                 reject(inputDelay);\n//             }\n//         }, inputDelay);\n//     });\n\n//     promise\n//     .then(\n//    (result) => {\n//         iziToast.show({\n//             title: '',\n//             message: `✅ Fulfilled promise in ${result}ms`,\n//                });\n//     },\n//     (result) => {\n//         iziToast.show({\n//             title: '',\n//             message: '❌ Rejected promise in ${result}ms'\n//                });\n//     }\n// );\n// // .catch(error){\n// //     iziToast.show({\n// //         title: '',\n// //         message: '❌ Rejected promise in ${result}ms'\n// //            });\n// // }\n\n// form.reset();\n// }"],"names":["form","inputDelay","makePromise","delay","makeDelay","event","radioBtn","resolve","reject","iziToast","value"],"mappings":"yCAIA,MAAMA,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAa,SAAS,cAAc,qBAAqB,EAC/DD,EAAK,iBAAiB,SAAUE,CAAW,EAC3C,IAAIC,EAAQ,KACZF,EAAW,iBAAiB,QAASG,CAAS,EAC9C,QAAQ,IAAID,CAAK,EACjB,SAASC,GAAW,CAChB,OAAAD,EAAQF,EAAW,MACbE,CACV,CAEA,SAASD,EAAYG,EAAM,CACvBA,EAAM,eAAc,EAGpB,MAAMC,EAAW,SAAS,cAAc,wBAAwB,EAAE,MAElD,IAAI,QAAS,CAACC,EAASC,IAAU,CAClCF,IAAa,YAChBC,EACKE,EAAS,KAAK,CACX,aAAc,QACd,gBAAiB,QACjB,SAAU,WACV,MAAO,GACH,MAAO,GACP,QAAS,0BAA0BN,CAAK,IACpE,CAAgC,CAChC,EACsBG,IAAa,YACnBE,EAEAC,EAAS,KAAK,CACV,aAAc,QACd,gBAAiB,MACjB,SAAU,WACV,MAAO,GACP,MAAO,GACP,QAAS,yBAAyBN,CAAK,IACnC,CAAA,CAAC,CAEzB,CAAK,EAGA,KAAKO,GAAS,CACX,WAAW,IAAK,CAEf,EAAEP,CAAK,CAEhB,CAAK,EACA,MAAMO,GAAS,CACZ,WAAW,IAAK,CAEd,EAAEP,CAAK,CACjB,CAAK,EACA,QAAQ,IAAM,CACXF,EAAW,MAAQ,GACnB,SAAS,cAAc,gBAAgB,EAAE,QAAU,EAC3D,CAAK,CACL"}