{"version":3,"file":"1-timer-BZKBXvis.js","sources":["../../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userSelectedDate = null;\nlet interval = 0;\nconst startBtn = document.querySelector('button[data-start]');\nconst inputTime = document.querySelector('#datetime-picker')\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n\n    if (selectedDate <= new Date){\n      iziToast.show({\n        title: '',\n        message: 'Please choose a date in the future'\n           });\n    startBtn.disabled = true;\n    }else{\n      userSelectedDate = selectedDate;\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nstartBtn.addEventListener('click', startCountdown);\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n} \n\nfunction startCountdown() {\n  if (userSelectedDate) {\n    const { days, hours, minutes, seconds } = convertMs(userSelectedDate - new Date());\n        (days, hours, minutes, seconds);\n    startBtn.disabled = true;\n\n    interval = setInterval(() => {\n      const { days, hours, minutes, seconds } = convertMs(userSelectedDate - new Date());\n        updateTimer(days, hours, minutes, seconds);\n    }, 1000)\n    inputTime.disabled = true;\n  }\n\n}\n\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTimer(days, hours, minutes, seconds) {\n  document.querySelector('[data-days]').textContent = addLeadingZero(days);\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n\n  if (days === 0 && hours === 0 && minutes === 0 && seconds === 0) {\n    clearInterval(interval);\n    inputTime.disabled = false;\n  }\n  \n}\n\n"],"names":["userSelectedDate","interval","startBtn","inputTime","options","selectedDates","selectedDate","iziToast","flatpickr","startCountdown","addLeadingZero","value","days","hours","minutes","seconds","convertMs","updateTimer","ms"],"mappings":"svBAOA,IAAIA,EAAmB,KACnBC,EAAW,EACf,MAAMC,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAY,SAAS,cAAc,kBAAkB,EAC3DD,EAAS,SAAW,GAEpB,MAAME,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAEhCC,GAAgB,IAAI,MACtBC,EAAS,KAAK,CACZ,MAAO,GACP,QAAS,oCACjB,CAAY,EACRL,EAAS,SAAW,KAElBF,EAAmBM,EACnBJ,EAAS,SAAW,GAEvB,CACH,EAEAM,EAAU,mBAAoBJ,CAAO,EAErCF,EAAS,iBAAiB,QAASO,CAAc,EAEjD,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASF,GAAiB,CACpBT,IAGFE,EAAS,SAAW,GAEpBD,EAAW,YAAY,IAAM,CAC3B,KAAM,CAAE,KAAAW,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUhB,EAAmB,IAAI,IAAM,EAC/EiB,EAAYL,EAAMC,EAAOC,EAASC,CAAO,CAC5C,EAAE,GAAI,EACPZ,EAAU,SAAW,GAGzB,CAGA,SAASa,EAAUE,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAYL,EAAMC,EAAOC,EAASC,EAAS,CAClD,SAAS,cAAc,aAAa,EAAE,YAAcL,EAAeE,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcF,EAAeG,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcH,EAAeI,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcJ,EAAeK,CAAO,EAEzEH,IAAS,GAAKC,IAAU,GAAKC,IAAY,GAAKC,IAAY,IAC5D,cAAcd,CAAQ,EACtBE,EAAU,SAAW,GAGzB"}